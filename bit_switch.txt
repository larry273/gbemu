switch (bitCode) {
	case 0x00: std::cout << " RLC B \n";  rlc(reg.B); cycles=8; break;
	case 0x01: std::cout << " RLC C \n";  rlc(reg.C); cycles=8; break;
	case 0x02: std::cout << " RLC D \n";  rlc(reg.D); cycles=8; break;
	case 0x03: std::cout << " RLC E \n";  rlc(reg.E); cycles=8; break;
	case 0x04: std::cout << " RLC H \n";  rlc(reg.H); cycles=8; break;
	case 0x05: std::cout << " RLC L \n";  rlc(reg.L); cycles=8; break;
	case 0x06: std::cout << " RLC (HL) \n";  rlc(reg.A, true); cycles=16; break;
	case 0x07: std::cout << " RLC A \n";  rlc(reg.A); cycles=8; break;
	case 0x08: std::cout << " RRC B \n";  rrc(reg.B); cycles=8; break;
	case 0x09: std::cout << " RRC C \n";  rrc(reg.C); cycles=8; break;
	case 0x0A: std::cout << " RRC D \n";  rrc(reg.D); cycles=8; break;
	case 0x0B: std::cout << " RRC E \n";  rrc(reg.E); cycles=8; break;
	case 0x0C: std::cout << " RRC H \n";  rrc(reg.H); cycles=8; break;
	case 0x0D: std::cout << " RRC L \n";  rrc(reg.L); cycles=8; break;
	case 0x0E: std::cout << " RRC (HL) \n";  rrc(reg.A, true); cycles=16; break;
	case 0x0F: std::cout << " RRC A \n";  rrc(reg.A); cycles=8; break;
	case 0x10: std::cout << " RL B \n";  rl(reg.B); cycles=8; break;
	case 0x11: std::cout << " RL C \n";  rl(reg.C); cycles=8; break;
	case 0x12: std::cout << " RL D \n";  rl(reg.D); cycles=8; break;
	case 0x13: std::cout << " RL E \n";  rl(reg.E); cycles=8; break;
	case 0x14: std::cout << " RL H \n";  rl(reg.H); cycles=8; break;
	case 0x15: std::cout << " RL L \n";  rl(reg.L); cycles=8; break;
	case 0x16: std::cout << " RL (HL) \n";  rl(reg.A, true); cycles=16; break;
	case 0x17: std::cout << " RL A \n";  rl(reg.A); cycles=8; break;
	case 0x18: std::cout << " RR B \n";  rr(reg.B); cycles=8; break;
	case 0x19: std::cout << " RR C \n";  rr(reg.C); cycles=8; break;
	case 0x1A: std::cout << " RR D \n";  rr(reg.D); cycles=8; break;
	case 0x1B: std::cout << " RR E \n";  rr(reg.E); cycles=8; break;
	case 0x1C: std::cout << " RR H \n";  rr(reg.H); cycles=8; break;
	case 0x1D: std::cout << " RR L \n";  rr(reg.L); cycles=8; break;
	case 0x1E: std::cout << " RR (HL) \n";  rr(reg.A, true); cycles=16; break;
	case 0x1F: std::cout << " RR A \n";  rr(reg.A); cycles=8; break;
	case 0x20: std::cout << " SLA B \n";  sla(reg.B); cycles=8; break;
	case 0x21: std::cout << " SLA C \n";  sla(reg.C); cycles=8; break;
	case 0x22: std::cout << " SLA D \n";  sla(reg.D); cycles=8; break;
	case 0x23: std::cout << " SLA E \n";  sla(reg.E); cycles=8; break;
	case 0x24: std::cout << " SLA H \n";  sla(reg.H); cycles=8; break;
	case 0x25: std::cout << " SLA L \n";  sla(reg.L); cycles=8; break;
	case 0x26: std::cout << " SLA (HL) \n";  sla(reg.A, true); cycles=16; break;
	case 0x27: std::cout << " SLA A \n";  sla(reg.A); cycles=8; break;
	case 0x28: std::cout << " SRA B \n";  sra(reg.B); cycles=8; break;
	case 0x29: std::cout << " SRA C \n";  sra(reg.C); cycles=8; break;
	case 0x2A: std::cout << " SRA D \n";  sra(reg.D); cycles=8; break;
	case 0x2B: std::cout << " SRA E \n";  sra(reg.E); cycles=8; break;
	case 0x2C: std::cout << " SRA H \n";  sra(reg.H); cycles=8; break;
	case 0x2D: std::cout << " SRA L \n";  sra(reg.L); cycles=8; break;
	case 0x2E: std::cout << " SRA (HL) \n";  sra(reg.A, true); cycles=16; break;
	case 0x2F: std::cout << " SRA A \n";  sra(reg.A); cycles=8; break;
	case 0x30: std::cout << " SWAP B \n";  swap(reg.B); cycles=8; break;
	case 0x31: std::cout << " SWAP C \n";  swap(reg.C); cycles=8; break;
	case 0x32: std::cout << " SWAP D \n";  swap(reg.D); cycles=8; break;
	case 0x33: std::cout << " SWAP E \n";  swap(reg.E); cycles=8; break;
	case 0x34: std::cout << " SWAP H \n";  swap(reg.H); cycles=8; break;
	case 0x35: std::cout << " SWAP L \n";  swap(reg.L); cycles=8; break;
	case 0x36: std::cout << " SWAP (HL) \n";  swap(reg.A, true); cycles=16; break;
	case 0x37: std::cout << " SWAP A \n";  swap(reg.A); cycles=8; break;
	case 0x38: std::cout << " SRL B \n";  srl(reg.B); cycles=8; break;
	case 0x39: std::cout << " SRL C \n";  srl(reg.C); cycles=8; break;
	case 0x3A: std::cout << " SRL D \n";  srl(reg.D); cycles=8; break;
	case 0x3B: std::cout << " SRL E \n";  srl(reg.E); cycles=8; break;
	case 0x3C: std::cout << " SRL H \n";  srl(reg.H); cycles=8; break;
	case 0x3D: std::cout << " SRL L \n";  srl(reg.L); cycles=8; break;
	case 0x3E: std::cout << " SRL (HL) \n";  srl(reg.A, true); cycles=16; break;
	case 0x3F: std::cout << " SRL A \n";  srl(reg.A); cycles=8; break;
	case 0x40: std::cout << " BIT 0 B \n";  bit(BITZERO, reg.B); cycles=8; break;
	case 0x41: std::cout << " BIT 0 C \n";  bit(BITZERO, reg.C); cycles=8; break;
	case 0x42: std::cout << " BIT 0 D \n";  bit(BITZERO, reg.D); cycles=8; break;
	case 0x43: std::cout << " BIT 0 E \n";  bit(BITZERO, reg.E); cycles=8; break;
	case 0x44: std::cout << " BIT 0 H \n";  bit(BITZERO, reg.H); cycles=8; break;
	case 0x45: std::cout << " BIT 0 L \n";  bit(BITZERO, reg.L); cycles=8; break;
	case 0x46: std::cout << " BIT 0 (HL) \n";  bit(BITZERO, reg.A, true); cycles=12; break;
	case 0x47: std::cout << " BIT 0 A \n";  bit(BITZERO, reg.A); cycles=8; break;
	case 0x48: std::cout << " BIT 1 B \n";  bit(BITONE, reg.B); cycles=8; break;
	case 0x49: std::cout << " BIT 1 C \n";  bit(BITONE, reg.C); cycles=8; break;
	case 0x4A: std::cout << " BIT 1 D \n";  bit(BITONE, reg.D); cycles=8; break;
	case 0x4B: std::cout << " BIT 1 E \n";  bit(BITONE, reg.E); cycles=8; break;
	case 0x4C: std::cout << " BIT 1 H \n";  bit(BITONE, reg.H); cycles=8; break;
	case 0x4D: std::cout << " BIT 1 L \n";  bit(BITONE, reg.L); cycles=8; break;
	case 0x4E: std::cout << " BIT 1 (HL) \n";  bit(BITONE, reg.A, true); cycles=12; break;
	case 0x4F: std::cout << " BIT 1 A \n";  bit(BITONE, reg.A); cycles=8; break;
	case 0x50: std::cout << " BIT 2 B \n";  bit(BITTWO, reg.B); cycles=8; break;
	case 0x51: std::cout << " BIT 2 C \n";  bit(BITTWO, reg.C); cycles=8; break;
	case 0x52: std::cout << " BIT 2 D \n";  bit(BITTWO, reg.D); cycles=8; break;
	case 0x53: std::cout << " BIT 2 E \n";  bit(BITTWO, reg.E); cycles=8; break;
	case 0x54: std::cout << " BIT 2 H \n";  bit(BITTWO, reg.H); cycles=8; break;
	case 0x55: std::cout << " BIT 2 L \n";  bit(BITTWO, reg.L); cycles=8; break;
	case 0x56: std::cout << " BIT 2 (HL) \n";  bit(BITTWO, reg.A, true); cycles=12; break;
	case 0x57: std::cout << " BIT 2 A \n";  bit(BITTWO, reg.A); cycles=8; break;
	case 0x58: std::cout << " BIT 3 B \n";  bit(BITTHREE, reg.B); cycles=8; break;
	case 0x59: std::cout << " BIT 3 C \n";  bit(BITTHREE, reg.C); cycles=8; break;
	case 0x5A: std::cout << " BIT 3 D \n";  bit(BITTHREE, reg.D); cycles=8; break;
	case 0x5B: std::cout << " BIT 3 E \n";  bit(BITTHREE, reg.E); cycles=8; break;
	case 0x5C: std::cout << " BIT 3 H \n";  bit(BITTHREE, reg.H); cycles=8; break;
	case 0x5D: std::cout << " BIT 3 L \n";  bit(BITTHREE, reg.L); cycles=8; break;
	case 0x5E: std::cout << " BIT 3 (HL) \n";  bit(BITTHREE, reg.A, true); cycles=12; break;
	case 0x5F: std::cout << " BIT 3 A \n";  bit(BITTHREE, reg.A); cycles=8; break;
	case 0x60: std::cout << " BIT 4 B \n";  bit(BITFOUR, reg.B); cycles=8; break;
	case 0x61: std::cout << " BIT 4 C \n";  bit(BITFOUR, reg.C); cycles=8; break;
	case 0x62: std::cout << " BIT 4 D \n";  bit(BITFOUR, reg.D); cycles=8; break;
	case 0x63: std::cout << " BIT 4 E \n";  bit(BITFOUR, reg.E); cycles=8; break;
	case 0x64: std::cout << " BIT 4 H \n";  bit(BITFOUR, reg.H); cycles=8; break;
	case 0x65: std::cout << " BIT 4 L \n";  bit(BITFOUR, reg.L); cycles=8; break;
	case 0x66: std::cout << " BIT 4 (HL) \n";  bit(BITFOUR, reg.A, true); cycles=12; break;
	case 0x67: std::cout << " BIT 4 A \n";  bit(BITFOUR, reg.A); cycles=8; break;
	case 0x68: std::cout << " BIT 5 B \n";  bit(BITFIVE, reg.B); cycles=8; break;
	case 0x69: std::cout << " BIT 5 C \n";  bit(BITFIVE, reg.C); cycles=8; break;
	case 0x6A: std::cout << " BIT 5 D \n";  bit(BITFIVE, reg.D); cycles=8; break;
	case 0x6B: std::cout << " BIT 5 E \n";  bit(BITFIVE, reg.E); cycles=8; break;
	case 0x6C: std::cout << " BIT 5 H \n";  bit(BITFIVE, reg.H); cycles=8; break;
	case 0x6D: std::cout << " BIT 5 L \n";  bit(BITFIVE, reg.L); cycles=8; break;
	case 0x6E: std::cout << " BIT 5 (HL) \n";  bit(BITFIVE, reg.A, true); cycles=12; break;
	case 0x6F: std::cout << " BIT 5 A \n";  bit(BITFIVE, reg.A); cycles=8; break;
	case 0x70: std::cout << " BIT 6 B \n";  bit(BITSIX, reg.B); cycles=8; break;
	case 0x71: std::cout << " BIT 6 C \n";  bit(BITSIX, reg.C); cycles=8; break;
	case 0x72: std::cout << " BIT 6 D \n";  bit(BITSIX, reg.D); cycles=8; break;
	case 0x73: std::cout << " BIT 6 E \n";  bit(BITSIX, reg.E); cycles=8; break;
	case 0x74: std::cout << " BIT 6 H \n";  bit(BITSIX, reg.H); cycles=8; break;
	case 0x75: std::cout << " BIT 6 L \n";  bit(BITSIX, reg.L); cycles=8; break;
	case 0x76: std::cout << " BIT 6 (HL) \n";  bit(BITSIX, reg.A, true); cycles=12; break;
	case 0x77: std::cout << " BIT 6 A \n";  bit(BITSIX, reg.A); cycles=8; break;
	case 0x78: std::cout << " BIT 7 B \n";  bit(BITSEVEN, reg.B); cycles=8; break;
	case 0x79: std::cout << " BIT 7 C \n";  bit(BITSEVEN, reg.C); cycles=8; break;
	case 0x7A: std::cout << " BIT 7 D \n";  bit(BITSEVEN, reg.D); cycles=8; break;
	case 0x7B: std::cout << " BIT 7 E \n";  bit(BITSEVEN, reg.E); cycles=8; break;
	case 0x7C: std::cout << " BIT 7 H \n";  bit(BITSEVEN, reg.H); cycles=8; break;
	case 0x7D: std::cout << " BIT 7 L \n";  bit(BITSEVEN, reg.L); cycles=8; break;
	case 0x7E: std::cout << " BIT 7 (HL) \n";  bit(BITSEVEN, reg.A, true); cycles=12; break;
	case 0x7F: std::cout << " BIT 7 A \n";  bit(BITSEVEN, reg.A); cycles=8; break;
	case 0x80: std::cout << " RES 0 B \n";  res(BITZERO, reg.B); cycles=8; break;
	case 0x81: std::cout << " RES 0 C \n";  res(BITZERO, reg.C); cycles=8; break;
	case 0x82: std::cout << " RES 0 D \n";  res(BITZERO, reg.D); cycles=8; break;
	case 0x83: std::cout << " RES 0 E \n";  res(BITZERO, reg.E); cycles=8; break;
	case 0x84: std::cout << " RES 0 H \n";  res(BITZERO, reg.H); cycles=8; break;
	case 0x85: std::cout << " RES 0 L \n";  res(BITZERO, reg.L); cycles=8; break;
	case 0x86: std::cout << " RES 0 (HL) \n";  res(BITZERO, reg.A, true); cycles=16; break;
	case 0x87: std::cout << " RES 0 A \n";  res(BITZERO, reg.A); cycles=8; break;
	case 0x88: std::cout << " RES 1 B \n";  res(BITONE, reg.B); cycles=8; break;
	case 0x89: std::cout << " RES 1 C \n";  res(BITONE, reg.C); cycles=8; break;
	case 0x8A: std::cout << " RES 1 D \n";  res(BITONE, reg.D); cycles=8; break;
	case 0x8B: std::cout << " RES 1 E \n";  res(BITONE, reg.E); cycles=8; break;
	case 0x8C: std::cout << " RES 1 H \n";  res(BITONE, reg.H); cycles=8; break;
	case 0x8D: std::cout << " RES 1 L \n";  res(BITONE, reg.L); cycles=8; break;
	case 0x8E: std::cout << " RES 1 (HL) \n";  res(BITONE, reg.A, true); cycles=16; break;
	case 0x8F: std::cout << " RES 1 A \n";  res(BITONE, reg.A); cycles=8; break;
	case 0x90: std::cout << " RES 2 B \n";  res(BITTWO, reg.B); cycles=8; break;
	case 0x91: std::cout << " RES 2 C \n";  res(BITTWO, reg.C); cycles=8; break;
	case 0x92: std::cout << " RES 2 D \n";  res(BITTWO, reg.D); cycles=8; break;
	case 0x93: std::cout << " RES 2 E \n";  res(BITTWO, reg.E); cycles=8; break;
	case 0x94: std::cout << " RES 2 H \n";  res(BITTWO, reg.H); cycles=8; break;
	case 0x95: std::cout << " RES 2 L \n";  res(BITTWO, reg.L); cycles=8; break;
	case 0x96: std::cout << " RES 2 (HL) \n";  res(BITTWO, reg.A, true); cycles=16; break;
	case 0x97: std::cout << " RES 2 A \n";  res(BITTWO, reg.A); cycles=8; break;
	case 0x98: std::cout << " RES 3 B \n";  res(BITTHREE, reg.B); cycles=8; break;
	case 0x99: std::cout << " RES 3 C \n";  res(BITTHREE, reg.C); cycles=8; break;
	case 0x9A: std::cout << " RES 3 D \n";  res(BITTHREE, reg.D); cycles=8; break;
	case 0x9B: std::cout << " RES 3 E \n";  res(BITTHREE, reg.E); cycles=8; break;
	case 0x9C: std::cout << " RES 3 H \n";  res(BITTHREE, reg.H); cycles=8; break;
	case 0x9D: std::cout << " RES 3 L \n";  res(BITTHREE, reg.L); cycles=8; break;
	case 0x9E: std::cout << " RES 3 (HL) \n";  res(BITTHREE, reg.A, true); cycles=16; break;
	case 0x9F: std::cout << " RES 3 A \n";  res(BITTHREE, reg.A); cycles=8; break;
	case 0xA0: std::cout << " RES 4 B \n";  res(BITFOUR, reg.B); cycles=8; break;
	case 0xA1: std::cout << " RES 4 C \n";  res(BITFOUR, reg.C); cycles=8; break;
	case 0xA2: std::cout << " RES 4 D \n";  res(BITFOUR, reg.D); cycles=8; break;
	case 0xA3: std::cout << " RES 4 E \n";  res(BITFOUR, reg.E); cycles=8; break;
	case 0xA4: std::cout << " RES 4 H \n";  res(BITFOUR, reg.H); cycles=8; break;
	case 0xA5: std::cout << " RES 4 L \n";  res(BITFOUR, reg.L); cycles=8; break;
	case 0xA6: std::cout << " RES 4 (HL) \n";  res(BITFOUR, reg.A, true); cycles=16; break;
	case 0xA7: std::cout << " RES 4 A \n";  res(BITFOUR, reg.A); cycles=8; break;
	case 0xA8: std::cout << " RES 5 B \n";  res(BITFIVE, reg.B); cycles=8; break;
	case 0xA9: std::cout << " RES 5 C \n";  res(BITFIVE, reg.C); cycles=8; break;
	case 0xAA: std::cout << " RES 5 D \n";  res(BITFIVE, reg.D); cycles=8; break;
	case 0xAB: std::cout << " RES 5 E \n";  res(BITFIVE, reg.E); cycles=8; break;
	case 0xAC: std::cout << " RES 5 H \n";  res(BITFIVE, reg.H); cycles=8; break;
	case 0xAD: std::cout << " RES 5 L \n";  res(BITFIVE, reg.L); cycles=8; break;
	case 0xAE: std::cout << " RES 5 (HL) \n";  res(BITFIVE, reg.A, true); cycles=16; break;
	case 0xAF: std::cout << " RES 5 A \n";  res(BITFIVE, reg.A); cycles=8; break;
	case 0xB0: std::cout << " RES 6 B \n";  res(BITSIX, reg.B); cycles=8; break;
	case 0xB1: std::cout << " RES 6 C \n";  res(BITSIX, reg.C); cycles=8; break;
	case 0xB2: std::cout << " RES 6 D \n";  res(BITSIX, reg.D); cycles=8; break;
	case 0xB3: std::cout << " RES 6 E \n";  res(BITSIX, reg.E); cycles=8; break;
	case 0xB4: std::cout << " RES 6 H \n";  res(BITSIX, reg.H); cycles=8; break;
	case 0xB5: std::cout << " RES 6 L \n";  res(BITSIX, reg.L); cycles=8; break;
	case 0xB6: std::cout << " RES 6 (HL) \n";  res(BITSIX, reg.A, true); cycles=16; break;
	case 0xB7: std::cout << " RES 6 A \n";  res(BITSIX, reg.A); cycles=8; break;
	case 0xB8: std::cout << " RES 7 B \n";  res(BITSEVEN, reg.B); cycles=8; break;
	case 0xB9: std::cout << " RES 7 C \n";  res(BITSEVEN, reg.C); cycles=8; break;
	case 0xBA: std::cout << " RES 7 D \n";  res(BITSEVEN, reg.D); cycles=8; break;
	case 0xBB: std::cout << " RES 7 E \n";  res(BITSEVEN, reg.E); cycles=8; break;
	case 0xBC: std::cout << " RES 7 H \n";  res(BITSEVEN, reg.H); cycles=8; break;
	case 0xBD: std::cout << " RES 7 L \n";  res(BITSEVEN, reg.L); cycles=8; break;
	case 0xBE: std::cout << " RES 7 (HL) \n";  res(BITSEVEN, reg.A, true); cycles=16; break;
	case 0xBF: std::cout << " RES 7 A \n";  res(BITSEVEN, reg.A); cycles=8; break;
	case 0xC0: std::cout << " SET 0 B \n";  set(BITZERO, reg.B); cycles=8; break;
	case 0xC1: std::cout << " SET 0 C \n";  set(BITZERO, reg.C); cycles=8; break;
	case 0xC2: std::cout << " SET 0 D \n";  set(BITZERO, reg.D); cycles=8; break;
	case 0xC3: std::cout << " SET 0 E \n";  set(BITZERO, reg.E); cycles=8; break;
	case 0xC4: std::cout << " SET 0 H \n";  set(BITZERO, reg.H); cycles=8; break;
	case 0xC5: std::cout << " SET 0 L \n";  set(BITZERO, reg.L); cycles=8; break;
	case 0xC6: std::cout << " SET 0 (HL) \n";  set(BITZERO, reg.A, true); cycles=16; break;
	case 0xC7: std::cout << " SET 0 A \n";  set(BITZERO, reg.A); cycles=8; break;
	case 0xC8: std::cout << " SET 1 B \n";  set(BITONE, reg.B); cycles=8; break;
	case 0xC9: std::cout << " SET 1 C \n";  set(BITONE, reg.C); cycles=8; break;
	case 0xCA: std::cout << " SET 1 D \n";  set(BITONE, reg.D); cycles=8; break;
	case 0xCB: std::cout << " SET 1 E \n";  set(BITONE, reg.E); cycles=8; break;
	case 0xCC: std::cout << " SET 1 H \n";  set(BITONE, reg.H); cycles=8; break;
	case 0xCD: std::cout << " SET 1 L \n";  set(BITONE, reg.L); cycles=8; break;
	case 0xCE: std::cout << " SET 1 (HL) \n";  set(BITONE, reg.A, true); cycles=16; break;
	case 0xCF: std::cout << " SET 1 A \n";  set(BITONE, reg.A); cycles=8; break;
	case 0xD0: std::cout << " SET 2 B \n";  set(BITTWO, reg.B); cycles=8; break;
	case 0xD1: std::cout << " SET 2 C \n";  set(BITTWO, reg.C); cycles=8; break;
	case 0xD2: std::cout << " SET 2 D \n";  set(BITTWO, reg.D); cycles=8; break;
	case 0xD3: std::cout << " SET 2 E \n";  set(BITTWO, reg.E); cycles=8; break;
	case 0xD4: std::cout << " SET 2 H \n";  set(BITTWO, reg.H); cycles=8; break;
	case 0xD5: std::cout << " SET 2 L \n";  set(BITTWO, reg.L); cycles=8; break;
	case 0xD6: std::cout << " SET 2 (HL) \n";  set(BITTWO, reg.A, true); cycles=16; break;
	case 0xD7: std::cout << " SET 2 A \n";  set(BITTWO, reg.A); cycles=8; break;
	case 0xD8: std::cout << " SET 3 B \n";  set(BITTHREE, reg.B); cycles=8; break;
	case 0xD9: std::cout << " SET 3 C \n";  set(BITTHREE, reg.C); cycles=8; break;
	case 0xDA: std::cout << " SET 3 D \n";  set(BITTHREE, reg.D); cycles=8; break;
	case 0xDB: std::cout << " SET 3 E \n";  set(BITTHREE, reg.E); cycles=8; break;
	case 0xDC: std::cout << " SET 3 H \n";  set(BITTHREE, reg.H); cycles=8; break;
	case 0xDD: std::cout << " SET 3 L \n";  set(BITTHREE, reg.L); cycles=8; break;
	case 0xDE: std::cout << " SET 3 (HL) \n";  set(BITTHREE, reg.A, true); cycles=16; break;
	case 0xDF: std::cout << " SET 3 A \n";  set(BITTHREE, reg.A); cycles=8; break;
	case 0xE0: std::cout << " SET 4 B \n";  set(BITFOUR, reg.B); cycles=8; break;
	case 0xE1: std::cout << " SET 4 C \n";  set(BITFOUR, reg.C); cycles=8; break;
	case 0xE2: std::cout << " SET 4 D \n";  set(BITFOUR, reg.D); cycles=8; break;
	case 0xE3: std::cout << " SET 4 E \n";  set(BITFOUR, reg.E); cycles=8; break;
	case 0xE4: std::cout << " SET 4 H \n";  set(BITFOUR, reg.H); cycles=8; break;
	case 0xE5: std::cout << " SET 4 L \n";  set(BITFOUR, reg.L); cycles=8; break;
	case 0xE6: std::cout << " SET 4 (HL) \n";  set(BITFOUR, reg.A, true); cycles=16; break;
	case 0xE7: std::cout << " SET 4 A \n";  set(BITFOUR, reg.A); cycles=8; break;
	case 0xE8: std::cout << " SET 5 B \n";  set(BITFIVE, reg.B); cycles=8; break;
	case 0xE9: std::cout << " SET 5 C \n";  set(BITFIVE, reg.C); cycles=8; break;
	case 0xEA: std::cout << " SET 5 D \n";  set(BITFIVE, reg.D); cycles=8; break;
	case 0xEB: std::cout << " SET 5 E \n";  set(BITFIVE, reg.E); cycles=8; break;
	case 0xEC: std::cout << " SET 5 H \n";  set(BITFIVE, reg.H); cycles=8; break;
	case 0xED: std::cout << " SET 5 L \n";  set(BITFIVE, reg.L); cycles=8; break;
	case 0xEE: std::cout << " SET 5 (HL) \n";  set(BITFIVE, reg.A, true); cycles=16; break;
	case 0xEF: std::cout << " SET 5 A \n";  set(BITFIVE, reg.A); cycles=8; break;
	case 0xF0: std::cout << " SET 6 B \n";  set(BITSIX, reg.B); cycles=8; break;
	case 0xF1: std::cout << " SET 6 C \n";  set(BITSIX, reg.C); cycles=8; break;
	case 0xF2: std::cout << " SET 6 D \n";  set(BITSIX, reg.D); cycles=8; break;
	case 0xF3: std::cout << " SET 6 E \n";  set(BITSIX, reg.E); cycles=8; break;
	case 0xF4: std::cout << " SET 6 H \n";  set(BITSIX, reg.H); cycles=8; break;
	case 0xF5: std::cout << " SET 6 L \n";  set(BITSIX, reg.L); cycles=8; break;
	case 0xF6: std::cout << " SET 6 (HL) \n";  set(BITSIX, reg.A, true); cycles=16; break;
	case 0xF7: std::cout << " SET 6 A \n";  set(BITSIX, reg.A); cycles=8; break;
	case 0xF8: std::cout << " SET 7 B \n";  set(BITSEVEN, reg.B); cycles=8; break;
	case 0xF9: std::cout << " SET 7 C \n";  set(BITSEVEN, reg.C); cycles=8; break;
	case 0xFA: std::cout << " SET 7 D \n";  set(BITSEVEN, reg.D); cycles=8; break;
	case 0xFB: std::cout << " SET 7 E \n";  set(BITSEVEN, reg.E); cycles=8; break;
	case 0xFC: std::cout << " SET 7 H \n";  set(BITSEVEN, reg.H); cycles=8; break;
	case 0xFD: std::cout << " SET 7 L \n";  set(BITSEVEN, reg.L); cycles=8; break;
	case 0xFE: std::cout << " SET 7 (HL) \n";  set(BITSEVEN, reg.A, true); cycles=16; break;
	case 0xFF: std::cout << " SET 7 A \n";  set(BITSEVEN, reg.A); cycles=8; break;
	default: std::cout << "***Instruction not recognized*** " << HEX(bitCode) << "\n"; break; 
}
