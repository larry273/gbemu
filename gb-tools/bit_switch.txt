switch (bitCode) {
	case 0x00:  rlc(reg.B); cycles=8; currentOpCode= "RLC B"; break;
	case 0x01:  rlc(reg.C); cycles=8; currentOpCode= "RLC C"; break;
	case 0x02:  rlc(reg.D); cycles=8; currentOpCode= "RLC D"; break;
	case 0x03:  rlc(reg.E); cycles=8; currentOpCode= "RLC E"; break;
	case 0x04:  rlc(reg.H); cycles=8; currentOpCode= "RLC H"; break;
	case 0x05:  rlc(reg.L); cycles=8; currentOpCode= "RLC L"; break;
	case 0x06:  rlc(reg.A, true); cycles=16; currentOpCode= "RLC (HL)"; break;
	case 0x07:  rlc(reg.A); cycles=8; currentOpCode= "RLC A"; break;
	case 0x08:  rrc(reg.B); cycles=8; currentOpCode= "RRC B"; break;
	case 0x09:  rrc(reg.C); cycles=8; currentOpCode= "RRC C"; break;
	case 0x0A:  rrc(reg.D); cycles=8; currentOpCode= "RRC D"; break;
	case 0x0B:  rrc(reg.E); cycles=8; currentOpCode= "RRC E"; break;
	case 0x0C:  rrc(reg.H); cycles=8; currentOpCode= "RRC H"; break;
	case 0x0D:  rrc(reg.L); cycles=8; currentOpCode= "RRC L"; break;
	case 0x0E:  rrc(reg.A, true); cycles=16; currentOpCode= "RRC (HL)"; break;
	case 0x0F:  rrc(reg.A); cycles=8; currentOpCode= "RRC A"; break;
	case 0x10:  rl(reg.B); cycles=8; currentOpCode= "RL B"; break;
	case 0x11:  rl(reg.C); cycles=8; currentOpCode= "RL C"; break;
	case 0x12:  rl(reg.D); cycles=8; currentOpCode= "RL D"; break;
	case 0x13:  rl(reg.E); cycles=8; currentOpCode= "RL E"; break;
	case 0x14:  rl(reg.H); cycles=8; currentOpCode= "RL H"; break;
	case 0x15:  rl(reg.L); cycles=8; currentOpCode= "RL L"; break;
	case 0x16:  rl(reg.A, true); cycles=16; currentOpCode= "RL (HL)"; break;
	case 0x17:  rl(reg.A); cycles=8; currentOpCode= "RL A"; break;
	case 0x18:  rr(reg.B); cycles=8; currentOpCode= "RR B"; break;
	case 0x19:  rr(reg.C); cycles=8; currentOpCode= "RR C"; break;
	case 0x1A:  rr(reg.D); cycles=8; currentOpCode= "RR D"; break;
	case 0x1B:  rr(reg.E); cycles=8; currentOpCode= "RR E"; break;
	case 0x1C:  rr(reg.H); cycles=8; currentOpCode= "RR H"; break;
	case 0x1D:  rr(reg.L); cycles=8; currentOpCode= "RR L"; break;
	case 0x1E:  rr(reg.A, true); cycles=16; currentOpCode= "RR (HL)"; break;
	case 0x1F:  rr(reg.A); cycles=8; currentOpCode= "RR A"; break;
	case 0x20:  sla(reg.B); cycles=8; currentOpCode= "SLA B"; break;
	case 0x21:  sla(reg.C); cycles=8; currentOpCode= "SLA C"; break;
	case 0x22:  sla(reg.D); cycles=8; currentOpCode= "SLA D"; break;
	case 0x23:  sla(reg.E); cycles=8; currentOpCode= "SLA E"; break;
	case 0x24:  sla(reg.H); cycles=8; currentOpCode= "SLA H"; break;
	case 0x25:  sla(reg.L); cycles=8; currentOpCode= "SLA L"; break;
	case 0x26:  sla(reg.A, true); cycles=16; currentOpCode= "SLA (HL)"; break;
	case 0x27:  sla(reg.A); cycles=8; currentOpCode= "SLA A"; break;
	case 0x28:  sra(reg.B); cycles=8; currentOpCode= "SRA B"; break;
	case 0x29:  sra(reg.C); cycles=8; currentOpCode= "SRA C"; break;
	case 0x2A:  sra(reg.D); cycles=8; currentOpCode= "SRA D"; break;
	case 0x2B:  sra(reg.E); cycles=8; currentOpCode= "SRA E"; break;
	case 0x2C:  sra(reg.H); cycles=8; currentOpCode= "SRA H"; break;
	case 0x2D:  sra(reg.L); cycles=8; currentOpCode= "SRA L"; break;
	case 0x2E:  sra(reg.A, true); cycles=16; currentOpCode= "SRA (HL)"; break;
	case 0x2F:  sra(reg.A); cycles=8; currentOpCode= "SRA A"; break;
	case 0x30:  swap(reg.B); cycles=8; currentOpCode= "SWAP B"; break;
	case 0x31:  swap(reg.C); cycles=8; currentOpCode= "SWAP C"; break;
	case 0x32:  swap(reg.D); cycles=8; currentOpCode= "SWAP D"; break;
	case 0x33:  swap(reg.E); cycles=8; currentOpCode= "SWAP E"; break;
	case 0x34:  swap(reg.H); cycles=8; currentOpCode= "SWAP H"; break;
	case 0x35:  swap(reg.L); cycles=8; currentOpCode= "SWAP L"; break;
	case 0x36:  swap(reg.A, true); cycles=16; currentOpCode= "SWAP (HL)"; break;
	case 0x37:  swap(reg.A); cycles=8; currentOpCode= "SWAP A"; break;
	case 0x38:  srl(reg.B); cycles=8; currentOpCode= "SRL B"; break;
	case 0x39:  srl(reg.C); cycles=8; currentOpCode= "SRL C"; break;
	case 0x3A:  srl(reg.D); cycles=8; currentOpCode= "SRL D"; break;
	case 0x3B:  srl(reg.E); cycles=8; currentOpCode= "SRL E"; break;
	case 0x3C:  srl(reg.H); cycles=8; currentOpCode= "SRL H"; break;
	case 0x3D:  srl(reg.L); cycles=8; currentOpCode= "SRL L"; break;
	case 0x3E:  srl(reg.A, true); cycles=16; currentOpCode= "SRL (HL)"; break;
	case 0x3F:  srl(reg.A); cycles=8; currentOpCode= "SRL A"; break;
	case 0x40:  bit(BITZERO, reg.B); cycles=8; currentOpCode= "BIT 0 B"; break;
	case 0x41:  bit(BITZERO, reg.C); cycles=8; currentOpCode= "BIT 0 C"; break;
	case 0x42:  bit(BITZERO, reg.D); cycles=8; currentOpCode= "BIT 0 D"; break;
	case 0x43:  bit(BITZERO, reg.E); cycles=8; currentOpCode= "BIT 0 E"; break;
	case 0x44:  bit(BITZERO, reg.H); cycles=8; currentOpCode= "BIT 0 H"; break;
	case 0x45:  bit(BITZERO, reg.L); cycles=8; currentOpCode= "BIT 0 L"; break;
	case 0x46:  bit(BITZERO, reg.A, true); cycles=12; currentOpCode= "BIT 0 (HL)"; break;
	case 0x47:  bit(BITZERO, reg.A); cycles=8; currentOpCode= "BIT 0 A"; break;
	case 0x48:  bit(BITONE, reg.B); cycles=8; currentOpCode= "BIT 1 B"; break;
	case 0x49:  bit(BITONE, reg.C); cycles=8; currentOpCode= "BIT 1 C"; break;
	case 0x4A:  bit(BITONE, reg.D); cycles=8; currentOpCode= "BIT 1 D"; break;
	case 0x4B:  bit(BITONE, reg.E); cycles=8; currentOpCode= "BIT 1 E"; break;
	case 0x4C:  bit(BITONE, reg.H); cycles=8; currentOpCode= "BIT 1 H"; break;
	case 0x4D:  bit(BITONE, reg.L); cycles=8; currentOpCode= "BIT 1 L"; break;
	case 0x4E:  bit(BITONE, reg.A, true); cycles=12; currentOpCode= "BIT 1 (HL)"; break;
	case 0x4F:  bit(BITONE, reg.A); cycles=8; currentOpCode= "BIT 1 A"; break;
	case 0x50:  bit(BITTWO, reg.B); cycles=8; currentOpCode= "BIT 2 B"; break;
	case 0x51:  bit(BITTWO, reg.C); cycles=8; currentOpCode= "BIT 2 C"; break;
	case 0x52:  bit(BITTWO, reg.D); cycles=8; currentOpCode= "BIT 2 D"; break;
	case 0x53:  bit(BITTWO, reg.E); cycles=8; currentOpCode= "BIT 2 E"; break;
	case 0x54:  bit(BITTWO, reg.H); cycles=8; currentOpCode= "BIT 2 H"; break;
	case 0x55:  bit(BITTWO, reg.L); cycles=8; currentOpCode= "BIT 2 L"; break;
	case 0x56:  bit(BITTWO, reg.A, true); cycles=12; currentOpCode= "BIT 2 (HL)"; break;
	case 0x57:  bit(BITTWO, reg.A); cycles=8; currentOpCode= "BIT 2 A"; break;
	case 0x58:  bit(BITTHREE, reg.B); cycles=8; currentOpCode= "BIT 3 B"; break;
	case 0x59:  bit(BITTHREE, reg.C); cycles=8; currentOpCode= "BIT 3 C"; break;
	case 0x5A:  bit(BITTHREE, reg.D); cycles=8; currentOpCode= "BIT 3 D"; break;
	case 0x5B:  bit(BITTHREE, reg.E); cycles=8; currentOpCode= "BIT 3 E"; break;
	case 0x5C:  bit(BITTHREE, reg.H); cycles=8; currentOpCode= "BIT 3 H"; break;
	case 0x5D:  bit(BITTHREE, reg.L); cycles=8; currentOpCode= "BIT 3 L"; break;
	case 0x5E:  bit(BITTHREE, reg.A, true); cycles=12; currentOpCode= "BIT 3 (HL)"; break;
	case 0x5F:  bit(BITTHREE, reg.A); cycles=8; currentOpCode= "BIT 3 A"; break;
	case 0x60:  bit(BITFOUR, reg.B); cycles=8; currentOpCode= "BIT 4 B"; break;
	case 0x61:  bit(BITFOUR, reg.C); cycles=8; currentOpCode= "BIT 4 C"; break;
	case 0x62:  bit(BITFOUR, reg.D); cycles=8; currentOpCode= "BIT 4 D"; break;
	case 0x63:  bit(BITFOUR, reg.E); cycles=8; currentOpCode= "BIT 4 E"; break;
	case 0x64:  bit(BITFOUR, reg.H); cycles=8; currentOpCode= "BIT 4 H"; break;
	case 0x65:  bit(BITFOUR, reg.L); cycles=8; currentOpCode= "BIT 4 L"; break;
	case 0x66:  bit(BITFOUR, reg.A, true); cycles=12; currentOpCode= "BIT 4 (HL)"; break;
	case 0x67:  bit(BITFOUR, reg.A); cycles=8; currentOpCode= "BIT 4 A"; break;
	case 0x68:  bit(BITFIVE, reg.B); cycles=8; currentOpCode= "BIT 5 B"; break;
	case 0x69:  bit(BITFIVE, reg.C); cycles=8; currentOpCode= "BIT 5 C"; break;
	case 0x6A:  bit(BITFIVE, reg.D); cycles=8; currentOpCode= "BIT 5 D"; break;
	case 0x6B:  bit(BITFIVE, reg.E); cycles=8; currentOpCode= "BIT 5 E"; break;
	case 0x6C:  bit(BITFIVE, reg.H); cycles=8; currentOpCode= "BIT 5 H"; break;
	case 0x6D:  bit(BITFIVE, reg.L); cycles=8; currentOpCode= "BIT 5 L"; break;
	case 0x6E:  bit(BITFIVE, reg.A, true); cycles=12; currentOpCode= "BIT 5 (HL)"; break;
	case 0x6F:  bit(BITFIVE, reg.A); cycles=8; currentOpCode= "BIT 5 A"; break;
	case 0x70:  bit(BITSIX, reg.B); cycles=8; currentOpCode= "BIT 6 B"; break;
	case 0x71:  bit(BITSIX, reg.C); cycles=8; currentOpCode= "BIT 6 C"; break;
	case 0x72:  bit(BITSIX, reg.D); cycles=8; currentOpCode= "BIT 6 D"; break;
	case 0x73:  bit(BITSIX, reg.E); cycles=8; currentOpCode= "BIT 6 E"; break;
	case 0x74:  bit(BITSIX, reg.H); cycles=8; currentOpCode= "BIT 6 H"; break;
	case 0x75:  bit(BITSIX, reg.L); cycles=8; currentOpCode= "BIT 6 L"; break;
	case 0x76:  bit(BITSIX, reg.A, true); cycles=12; currentOpCode= "BIT 6 (HL)"; break;
	case 0x77:  bit(BITSIX, reg.A); cycles=8; currentOpCode= "BIT 6 A"; break;
	case 0x78:  bit(BITSEVEN, reg.B); cycles=8; currentOpCode= "BIT 7 B"; break;
	case 0x79:  bit(BITSEVEN, reg.C); cycles=8; currentOpCode= "BIT 7 C"; break;
	case 0x7A:  bit(BITSEVEN, reg.D); cycles=8; currentOpCode= "BIT 7 D"; break;
	case 0x7B:  bit(BITSEVEN, reg.E); cycles=8; currentOpCode= "BIT 7 E"; break;
	case 0x7C:  bit(BITSEVEN, reg.H); cycles=8; currentOpCode= "BIT 7 H"; break;
	case 0x7D:  bit(BITSEVEN, reg.L); cycles=8; currentOpCode= "BIT 7 L"; break;
	case 0x7E:  bit(BITSEVEN, reg.A, true); cycles=12; currentOpCode= "BIT 7 (HL)"; break;
	case 0x7F:  bit(BITSEVEN, reg.A); cycles=8; currentOpCode= "BIT 7 A"; break;
	case 0x80:  res(BITZERO, reg.B); cycles=8; currentOpCode= "RES 0 B"; break;
	case 0x81:  res(BITZERO, reg.C); cycles=8; currentOpCode= "RES 0 C"; break;
	case 0x82:  res(BITZERO, reg.D); cycles=8; currentOpCode= "RES 0 D"; break;
	case 0x83:  res(BITZERO, reg.E); cycles=8; currentOpCode= "RES 0 E"; break;
	case 0x84:  res(BITZERO, reg.H); cycles=8; currentOpCode= "RES 0 H"; break;
	case 0x85:  res(BITZERO, reg.L); cycles=8; currentOpCode= "RES 0 L"; break;
	case 0x86:  res(BITZERO, reg.A, true); cycles=16; currentOpCode= "RES 0 (HL)"; break;
	case 0x87:  res(BITZERO, reg.A); cycles=8; currentOpCode= "RES 0 A"; break;
	case 0x88:  res(BITONE, reg.B); cycles=8; currentOpCode= "RES 1 B"; break;
	case 0x89:  res(BITONE, reg.C); cycles=8; currentOpCode= "RES 1 C"; break;
	case 0x8A:  res(BITONE, reg.D); cycles=8; currentOpCode= "RES 1 D"; break;
	case 0x8B:  res(BITONE, reg.E); cycles=8; currentOpCode= "RES 1 E"; break;
	case 0x8C:  res(BITONE, reg.H); cycles=8; currentOpCode= "RES 1 H"; break;
	case 0x8D:  res(BITONE, reg.L); cycles=8; currentOpCode= "RES 1 L"; break;
	case 0x8E:  res(BITONE, reg.A, true); cycles=16; currentOpCode= "RES 1 (HL)"; break;
	case 0x8F:  res(BITONE, reg.A); cycles=8; currentOpCode= "RES 1 A"; break;
	case 0x90:  res(BITTWO, reg.B); cycles=8; currentOpCode= "RES 2 B"; break;
	case 0x91:  res(BITTWO, reg.C); cycles=8; currentOpCode= "RES 2 C"; break;
	case 0x92:  res(BITTWO, reg.D); cycles=8; currentOpCode= "RES 2 D"; break;
	case 0x93:  res(BITTWO, reg.E); cycles=8; currentOpCode= "RES 2 E"; break;
	case 0x94:  res(BITTWO, reg.H); cycles=8; currentOpCode= "RES 2 H"; break;
	case 0x95:  res(BITTWO, reg.L); cycles=8; currentOpCode= "RES 2 L"; break;
	case 0x96:  res(BITTWO, reg.A, true); cycles=16; currentOpCode= "RES 2 (HL)"; break;
	case 0x97:  res(BITTWO, reg.A); cycles=8; currentOpCode= "RES 2 A"; break;
	case 0x98:  res(BITTHREE, reg.B); cycles=8; currentOpCode= "RES 3 B"; break;
	case 0x99:  res(BITTHREE, reg.C); cycles=8; currentOpCode= "RES 3 C"; break;
	case 0x9A:  res(BITTHREE, reg.D); cycles=8; currentOpCode= "RES 3 D"; break;
	case 0x9B:  res(BITTHREE, reg.E); cycles=8; currentOpCode= "RES 3 E"; break;
	case 0x9C:  res(BITTHREE, reg.H); cycles=8; currentOpCode= "RES 3 H"; break;
	case 0x9D:  res(BITTHREE, reg.L); cycles=8; currentOpCode= "RES 3 L"; break;
	case 0x9E:  res(BITTHREE, reg.A, true); cycles=16; currentOpCode= "RES 3 (HL)"; break;
	case 0x9F:  res(BITTHREE, reg.A); cycles=8; currentOpCode= "RES 3 A"; break;
	case 0xA0:  res(BITFOUR, reg.B); cycles=8; currentOpCode= "RES 4 B"; break;
	case 0xA1:  res(BITFOUR, reg.C); cycles=8; currentOpCode= "RES 4 C"; break;
	case 0xA2:  res(BITFOUR, reg.D); cycles=8; currentOpCode= "RES 4 D"; break;
	case 0xA3:  res(BITFOUR, reg.E); cycles=8; currentOpCode= "RES 4 E"; break;
	case 0xA4:  res(BITFOUR, reg.H); cycles=8; currentOpCode= "RES 4 H"; break;
	case 0xA5:  res(BITFOUR, reg.L); cycles=8; currentOpCode= "RES 4 L"; break;
	case 0xA6:  res(BITFOUR, reg.A, true); cycles=16; currentOpCode= "RES 4 (HL)"; break;
	case 0xA7:  res(BITFOUR, reg.A); cycles=8; currentOpCode= "RES 4 A"; break;
	case 0xA8:  res(BITFIVE, reg.B); cycles=8; currentOpCode= "RES 5 B"; break;
	case 0xA9:  res(BITFIVE, reg.C); cycles=8; currentOpCode= "RES 5 C"; break;
	case 0xAA:  res(BITFIVE, reg.D); cycles=8; currentOpCode= "RES 5 D"; break;
	case 0xAB:  res(BITFIVE, reg.E); cycles=8; currentOpCode= "RES 5 E"; break;
	case 0xAC:  res(BITFIVE, reg.H); cycles=8; currentOpCode= "RES 5 H"; break;
	case 0xAD:  res(BITFIVE, reg.L); cycles=8; currentOpCode= "RES 5 L"; break;
	case 0xAE:  res(BITFIVE, reg.A, true); cycles=16; currentOpCode= "RES 5 (HL)"; break;
	case 0xAF:  res(BITFIVE, reg.A); cycles=8; currentOpCode= "RES 5 A"; break;
	case 0xB0:  res(BITSIX, reg.B); cycles=8; currentOpCode= "RES 6 B"; break;
	case 0xB1:  res(BITSIX, reg.C); cycles=8; currentOpCode= "RES 6 C"; break;
	case 0xB2:  res(BITSIX, reg.D); cycles=8; currentOpCode= "RES 6 D"; break;
	case 0xB3:  res(BITSIX, reg.E); cycles=8; currentOpCode= "RES 6 E"; break;
	case 0xB4:  res(BITSIX, reg.H); cycles=8; currentOpCode= "RES 6 H"; break;
	case 0xB5:  res(BITSIX, reg.L); cycles=8; currentOpCode= "RES 6 L"; break;
	case 0xB6:  res(BITSIX, reg.A, true); cycles=16; currentOpCode= "RES 6 (HL)"; break;
	case 0xB7:  res(BITSIX, reg.A); cycles=8; currentOpCode= "RES 6 A"; break;
	case 0xB8:  res(BITSEVEN, reg.B); cycles=8; currentOpCode= "RES 7 B"; break;
	case 0xB9:  res(BITSEVEN, reg.C); cycles=8; currentOpCode= "RES 7 C"; break;
	case 0xBA:  res(BITSEVEN, reg.D); cycles=8; currentOpCode= "RES 7 D"; break;
	case 0xBB:  res(BITSEVEN, reg.E); cycles=8; currentOpCode= "RES 7 E"; break;
	case 0xBC:  res(BITSEVEN, reg.H); cycles=8; currentOpCode= "RES 7 H"; break;
	case 0xBD:  res(BITSEVEN, reg.L); cycles=8; currentOpCode= "RES 7 L"; break;
	case 0xBE:  res(BITSEVEN, reg.A, true); cycles=16; currentOpCode= "RES 7 (HL)"; break;
	case 0xBF:  res(BITSEVEN, reg.A); cycles=8; currentOpCode= "RES 7 A"; break;
	case 0xC0:  set(BITZERO, reg.B); cycles=8; currentOpCode= "SET 0 B"; break;
	case 0xC1:  set(BITZERO, reg.C); cycles=8; currentOpCode= "SET 0 C"; break;
	case 0xC2:  set(BITZERO, reg.D); cycles=8; currentOpCode= "SET 0 D"; break;
	case 0xC3:  set(BITZERO, reg.E); cycles=8; currentOpCode= "SET 0 E"; break;
	case 0xC4:  set(BITZERO, reg.H); cycles=8; currentOpCode= "SET 0 H"; break;
	case 0xC5:  set(BITZERO, reg.L); cycles=8; currentOpCode= "SET 0 L"; break;
	case 0xC6:  set(BITZERO, reg.A, true); cycles=16; currentOpCode= "SET 0 (HL)"; break;
	case 0xC7:  set(BITZERO, reg.A); cycles=8; currentOpCode= "SET 0 A"; break;
	case 0xC8:  set(BITONE, reg.B); cycles=8; currentOpCode= "SET 1 B"; break;
	case 0xC9:  set(BITONE, reg.C); cycles=8; currentOpCode= "SET 1 C"; break;
	case 0xCA:  set(BITONE, reg.D); cycles=8; currentOpCode= "SET 1 D"; break;
	case 0xCB:  set(BITONE, reg.E); cycles=8; currentOpCode= "SET 1 E"; break;
	case 0xCC:  set(BITONE, reg.H); cycles=8; currentOpCode= "SET 1 H"; break;
	case 0xCD:  set(BITONE, reg.L); cycles=8; currentOpCode= "SET 1 L"; break;
	case 0xCE:  set(BITONE, reg.A, true); cycles=16; currentOpCode= "SET 1 (HL)"; break;
	case 0xCF:  set(BITONE, reg.A); cycles=8; currentOpCode= "SET 1 A"; break;
	case 0xD0:  set(BITTWO, reg.B); cycles=8; currentOpCode= "SET 2 B"; break;
	case 0xD1:  set(BITTWO, reg.C); cycles=8; currentOpCode= "SET 2 C"; break;
	case 0xD2:  set(BITTWO, reg.D); cycles=8; currentOpCode= "SET 2 D"; break;
	case 0xD3:  set(BITTWO, reg.E); cycles=8; currentOpCode= "SET 2 E"; break;
	case 0xD4:  set(BITTWO, reg.H); cycles=8; currentOpCode= "SET 2 H"; break;
	case 0xD5:  set(BITTWO, reg.L); cycles=8; currentOpCode= "SET 2 L"; break;
	case 0xD6:  set(BITTWO, reg.A, true); cycles=16; currentOpCode= "SET 2 (HL)"; break;
	case 0xD7:  set(BITTWO, reg.A); cycles=8; currentOpCode= "SET 2 A"; break;
	case 0xD8:  set(BITTHREE, reg.B); cycles=8; currentOpCode= "SET 3 B"; break;
	case 0xD9:  set(BITTHREE, reg.C); cycles=8; currentOpCode= "SET 3 C"; break;
	case 0xDA:  set(BITTHREE, reg.D); cycles=8; currentOpCode= "SET 3 D"; break;
	case 0xDB:  set(BITTHREE, reg.E); cycles=8; currentOpCode= "SET 3 E"; break;
	case 0xDC:  set(BITTHREE, reg.H); cycles=8; currentOpCode= "SET 3 H"; break;
	case 0xDD:  set(BITTHREE, reg.L); cycles=8; currentOpCode= "SET 3 L"; break;
	case 0xDE:  set(BITTHREE, reg.A, true); cycles=16; currentOpCode= "SET 3 (HL)"; break;
	case 0xDF:  set(BITTHREE, reg.A); cycles=8; currentOpCode= "SET 3 A"; break;
	case 0xE0:  set(BITFOUR, reg.B); cycles=8; currentOpCode= "SET 4 B"; break;
	case 0xE1:  set(BITFOUR, reg.C); cycles=8; currentOpCode= "SET 4 C"; break;
	case 0xE2:  set(BITFOUR, reg.D); cycles=8; currentOpCode= "SET 4 D"; break;
	case 0xE3:  set(BITFOUR, reg.E); cycles=8; currentOpCode= "SET 4 E"; break;
	case 0xE4:  set(BITFOUR, reg.H); cycles=8; currentOpCode= "SET 4 H"; break;
	case 0xE5:  set(BITFOUR, reg.L); cycles=8; currentOpCode= "SET 4 L"; break;
	case 0xE6:  set(BITFOUR, reg.A, true); cycles=16; currentOpCode= "SET 4 (HL)"; break;
	case 0xE7:  set(BITFOUR, reg.A); cycles=8; currentOpCode= "SET 4 A"; break;
	case 0xE8:  set(BITFIVE, reg.B); cycles=8; currentOpCode= "SET 5 B"; break;
	case 0xE9:  set(BITFIVE, reg.C); cycles=8; currentOpCode= "SET 5 C"; break;
	case 0xEA:  set(BITFIVE, reg.D); cycles=8; currentOpCode= "SET 5 D"; break;
	case 0xEB:  set(BITFIVE, reg.E); cycles=8; currentOpCode= "SET 5 E"; break;
	case 0xEC:  set(BITFIVE, reg.H); cycles=8; currentOpCode= "SET 5 H"; break;
	case 0xED:  set(BITFIVE, reg.L); cycles=8; currentOpCode= "SET 5 L"; break;
	case 0xEE:  set(BITFIVE, reg.A, true); cycles=16; currentOpCode= "SET 5 (HL)"; break;
	case 0xEF:  set(BITFIVE, reg.A); cycles=8; currentOpCode= "SET 5 A"; break;
	case 0xF0:  set(BITSIX, reg.B); cycles=8; currentOpCode= "SET 6 B"; break;
	case 0xF1:  set(BITSIX, reg.C); cycles=8; currentOpCode= "SET 6 C"; break;
	case 0xF2:  set(BITSIX, reg.D); cycles=8; currentOpCode= "SET 6 D"; break;
	case 0xF3:  set(BITSIX, reg.E); cycles=8; currentOpCode= "SET 6 E"; break;
	case 0xF4:  set(BITSIX, reg.H); cycles=8; currentOpCode= "SET 6 H"; break;
	case 0xF5:  set(BITSIX, reg.L); cycles=8; currentOpCode= "SET 6 L"; break;
	case 0xF6:  set(BITSIX, reg.A, true); cycles=16; currentOpCode= "SET 6 (HL)"; break;
	case 0xF7:  set(BITSIX, reg.A); cycles=8; currentOpCode= "SET 6 A"; break;
	case 0xF8:  set(BITSEVEN, reg.B); cycles=8; currentOpCode= "SET 7 B"; break;
	case 0xF9:  set(BITSEVEN, reg.C); cycles=8; currentOpCode= "SET 7 C"; break;
	case 0xFA:  set(BITSEVEN, reg.D); cycles=8; currentOpCode= "SET 7 D"; break;
	case 0xFB:  set(BITSEVEN, reg.E); cycles=8; currentOpCode= "SET 7 E"; break;
	case 0xFC:  set(BITSEVEN, reg.H); cycles=8; currentOpCode= "SET 7 H"; break;
	case 0xFD:  set(BITSEVEN, reg.L); cycles=8; currentOpCode= "SET 7 L"; break;
	case 0xFE:  set(BITSEVEN, reg.A, true); cycles=16; currentOpCode= "SET 7 (HL)"; break;
	case 0xFF:  set(BITSEVEN, reg.A); cycles=8; currentOpCode= "SET 7 A"; break;
	default: debugOpCode << "***Instruction not recognized*** " << HEX(bitCode) << "\n"; break; 
}
